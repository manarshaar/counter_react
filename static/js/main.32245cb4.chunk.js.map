{"version":3,"sources":["components/Counter/index.js","App.js","reportWebVitals.js","index.js"],"names":["index","props","counters","c","className","icon","faSync","onClick","refresh","map","key","sum","faPlusCircle","add","faMinusCircle","sub","App","state","this","setState","prevState","faShoppingCart","reduce","acc","curr","handleRefresh","bind","handleAdd","handleSub","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAMe,SAASA,EAAMC,GAC5B,IAAMC,EAAWD,EAAME,EAEvB,OACE,sBAAKC,UAAU,YAAf,UACE,cAAC,IAAD,CAAiBC,KAAMC,IAAQF,UAAU,OAAOG,QAASN,EAAMO,UAC/D,8BACGN,EAASO,KAAI,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,IAAR,OACZ,iCACE,qBAAKP,UAAU,UAAf,SAAkC,IAARO,EAAY,OAASA,IAC/C,cAAC,IAAD,CACEN,KAAMO,IACNR,UAAU,YACVG,QAAS,kBAAMN,EAAMY,IAAIH,MAE3B,cAAC,IAAD,CACEL,KAAMS,IACNV,UAAU,aACVG,QAAS,kBAAMN,EAAMc,IAAIL,QAVlBA,W,ICwDNM,E,4MA/DbC,MAAQ,CACNf,SAAU,CACR,CAAEQ,IAAK,IAAKC,IAAK,GACjB,CAAED,IAAK,IAAKC,IAAK,GACjB,CAAED,IAAK,IAAKC,IAAK,GACjB,CAAED,IAAK,IAAKC,IAAK,K,8DAKnBO,KAAKC,UAAS,SAACC,GAIb,MAAO,CAAElB,SAHWkB,EAAUlB,SAASO,KAAI,SAACN,GAC1C,OAAO,2BAAKA,GAAZ,IAAeQ,IAAK,a,gCAMhBD,GACRQ,KAAKC,UAAS,SAACC,GAKb,MAAO,CAAElB,SAJWkB,EAAUlB,SAASO,KAAI,SAACN,GAC1C,OAAIA,EAAEO,MAAQA,EAAY,2BAAKP,GAAZ,IAAeQ,IAAKR,EAAEQ,IAAM,IAC1C,eAAYR,Y,gCAMbO,GACRQ,KAAKC,UAAS,SAACC,GAKb,MAAO,CAAElB,SAJWkB,EAAUlB,SAASO,KAAI,SAACN,GAC1C,OAAIA,EAAEO,MAAQA,GAAiB,IAAVP,EAAEQ,IAAkB,2BAAKR,GAAZ,IAAeQ,IAAKR,EAAEQ,IAAM,IACzD,eAAYR,Y,+BAOrB,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CAAiBC,KAAMgB,MACvB,qBAAKjB,UAAU,QAAf,SACGc,KAAKD,MAAMf,SAASoB,QAAO,SAACC,EAAKC,GAChC,OAAIA,EAAKb,IAAM,EAAUY,EAAM,EACxBA,IACN,KAEL,2CAGF,cAAC,EAAD,CACEpB,EAAGe,KAAKD,MAAMf,SACdM,QAASU,KAAKO,cAAcC,KAAKR,MACjCL,IAAKK,KAAKS,UAAUD,KAAKR,MACzBH,IAAKG,KAAKU,UAAUF,KAAKR,e,GAzDjBW,IAAMC,WCMTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.32245cb4.chunk.js","sourcesContent":["import \"./style.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSync } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function index(props) {\r\n  const counters = props.c;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <FontAwesomeIcon icon={faSync} className=\"icon\" onClick={props.refresh} />\r\n      <div>\r\n        {counters.map(({ key, sum }) => (\r\n          <span key={key}>\r\n            <div className=\"counter\">{sum === 0 ? \"Zero\" : sum}</div>\r\n            <FontAwesomeIcon\r\n              icon={faPlusCircle}\r\n              className=\"plus_icon\"\r\n              onClick={() => props.add(key)}\r\n            />\r\n            <FontAwesomeIcon\r\n              icon={faMinusCircle}\r\n              className=\"minus_icon\"\r\n              onClick={() => props.sub(key)}\r\n            />\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport Counter from \"./components/Counter\";\n\nclass App extends React.Component {\n  state = {\n    counters: [\n      { key: \"1\", sum: 0 },\n      { key: \"2\", sum: 0 },\n      { key: \"3\", sum: 0 },\n      { key: \"4\", sum: 0 },\n    ],\n  };\n\n  handleRefresh() {\n    this.setState((prevState) => {\n      const newCounters = prevState.counters.map((c) => {\n        return { ...c, sum: 0 };\n      });\n      return { counters: newCounters };\n    });\n  }\n\n  handleAdd(key) {\n    this.setState((prevState) => {\n      const newCounters = prevState.counters.map((c) => {\n        if (c.key === key) return { ...c, sum: c.sum + 1 };\n        else return { ...c };\n      });\n      return { counters: newCounters };\n    });\n  }\n\n  handleSub(key) {\n    this.setState((prevState) => {\n      const newCounters = prevState.counters.map((c) => {\n        if (c.key === key && c.sum !== 0) return { ...c, sum: c.sum - 1 };\n        else return { ...c };\n      });\n      return { counters: newCounters };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"wrapper\">\n          <FontAwesomeIcon icon={faShoppingCart} />\n          <div className=\"total\">\n            {this.state.counters.reduce((acc, curr) => {\n              if (curr.sum > 0) return acc + 1;\n              return acc;\n            }, 0)}\n          </div>\n          <div>Items</div>\n        </div>\n\n        <Counter\n          c={this.state.counters}\n          refresh={this.handleRefresh.bind(this)}\n          add={this.handleAdd.bind(this)}\n          sub={this.handleSub.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}